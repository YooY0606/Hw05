{"version":3,"sources":["todoform.js","todolist.js","title.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","todoRef","React","createRef","addItemOnList","e","preventDefault","todoItem","todo","current","value","isCompleted","props","addToDoItems","currentTarget","reset","id","onSubmit","this","type","name","ref","required","Component","TodoList","handleChange","event","updateTodo","todoItems","console","log","updateTodos","index","toggleCheckbox","checked","className","onChange","onClick","removeToDoItem","headerStyle","background","color","textAlign","padding","Header","style","App","state","item","items","Date","now","setState","todos","key","updatedTodo","Object","keys","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f081a20.chunk.js","sourcesContent":["import React from \"react\";\n\nclass TodoForm extends React.Component {\n  todoRef = React.createRef();\n\n  addItemOnList = e => {\n    e.preventDefault();\n    const todoItem = {\n      todo: this.todoRef.current.value,\n      isCompleted: false\n    };\n    this.props.addToDoItems(todoItem);\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form id=\"todoList-form\" onSubmit={this.addItemOnList}>\n        <input type=\"text\" name=\"todosTxtbx\" ref={this.todoRef} required />\n        <button>+</button>\n      </form>\n    );\n  }\n}\n\nexport default TodoForm;","import React from \"react\";\n\nclass TodoList extends React.Component {\n  handleChange = event => {\n    const updateTodo = {\n      ...this.props.todoItems,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    console.log(event.currentTarget.value);\n    this.props.updateTodos(this.props.index, updateTodo);\n  };\n\n  toggleCheckbox = event => {\n    const updateTodo = {\n      ...this.props.todoItems,\n      [event.currentTarget.name]: event.currentTarget.checked\n    };\n    this.props.updateTodos(this.props.index, updateTodo);\n  };\n\n  render() {\n    return (\n      <li className={this.props.todoItems.isCompleted ? \"done\" : null}>\n        <input\n          type=\"checkbox\"\n          name=\"isCompleted\"\n          checked={this.props.todoItems.isCompleted}\n          onChange={this.toggleCheckbox}\n          // checked={this.props.todoItems.isChecked}\n        />\n        <input\n          type=\"text\"\n          name=\"todo\"\n          value={this.props.todoItems.todo}\n          onChange={this.handleChange}\n        />\n        {/* <button>Edit</button> */}\n        <button\n          className=\"del-btn\"\n          onClick={() => this.props.removeToDoItem(this.props.index)}\n        >\n          x\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default TodoList;","import React from 'react';\n\nfunction Header() {\n    return (\n        <header style={headerStyle}>\n            <h1>CGU List</h1>\n        </header>\n    )\n}\n\nconst headerStyle = {\n    background: '#333',\n    color: '#fff',\n    textAlign: 'center',\n    padding: '10px'\n}\n\n\nexport default Header;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TodoForm from \"./todoform\";\nimport TodoList from \"./todolist\";\nimport Title from \"./title\"\nclass App extends Component {\n  state = {\n    todoItems: {}\n  };\n\n  addToDoItems = item => {\n    const items = { ...this.state.todoItems };\n    console.log(items);\n    items[`item${Date.now()}`] = item;\n    this.setState({\n      todoItems: items\n    });\n  };\n\n  removeToDoItem = item => {\n    const todos = { ...this.state.todoItems };\n    delete todos[item];\n    this.setState({ todoItems: todos });\n  };\n\n  updateTodos = (key, updatedTodo) => {\n    const todos = { ...this.state.todoItems };\n    todos[key] = updatedTodo;\n    this.setState({ todoItems: todos });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Title/>\n        <TodoForm addToDoItems={this.addToDoItems} />\n        <ul>\n          {Object.keys(this.state.todoItems).map(key => (\n            <TodoList\n              key={key}\n              index={key}\n              todoItems={this.state.todoItems[key]}\n              removeToDoItem={this.removeToDoItem}\n              updateTodos={this.updateTodos}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}